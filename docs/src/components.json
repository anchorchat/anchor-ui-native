{
  "lib/avatar/component.js": {
    "description": "Represent people or objects.",
    "displayName": "Avatar",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "source": {
        "type": {
          "name": "custom",
          "raw": "Image.propTypes.source"
        },
        "required": false,
        "description": "Image source",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "text": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Avatar text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "content": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Custom content",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Avatar size",
        "defaultValue": {
          "value": "48",
          "computed": false
        }
      },
      "type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'circle'",
              "computed": false
            },
            {
              "value": "'square'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Avatar type",
        "defaultValue": {
          "value": "'circle'",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Background color for text Avatars",
        "defaultValue": {
          "value": "'#B2B2B2'",
          "computed": false
        }
      },
      "onPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when Avatar is pressed\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "onLongPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when Avatar is long pressed\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "activeOpacity": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Determines what the opacity of the wrapped view should be when touch is active.",
        "defaultValue": {
          "value": "0.5",
          "computed": false
        }
      }
    }
  },
  "lib/button/component.js": {
    "description": "Button with optional icon",
    "displayName": "Button",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Label text"
      },
      "labelTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the label Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "icon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Icon for the left hand side of the Button",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the icon container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "onPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when Button is pressed\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "onLongPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when Button is long pressed\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "activeOpacity": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Determines what the opacity of the wrapped view should be when touch is active.",
        "defaultValue": {
          "value": "0.5",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/content-item/component.js": {
    "description": "Display content with a header",
    "displayName": "ContentItem",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content header text"
      },
      "headerStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the header Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "bodyText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content body text"
      },
      "bodyStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the body element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "bodyTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the body Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "divider": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Render a Divider underneath the bodyText",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "dividerStyle": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the divider element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "lib/context-menu/component.js": {
    "description": "ContextMenu",
    "displayName": "ContextMenu",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textContainerStyle": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the textContainer element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "itemStyle": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the textContainer element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "itemTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the item Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "items": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "key": {
                "name": "string",
                "required": true
              },
              "text": {
                "name": "node",
                "required": true
              },
              "onPress": {
                "name": "func",
                "required": true
              }
            }
          }
        },
        "required": true,
        "description": "ContextMenu items. Must be an array of objects containing the following:\n\n{\n  key: String,\n  text: Node,\n  onPress: Function\n}"
      },
      "notchStyle": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the notch element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/divider/component.js": {
    "description": "Dividers group and separate content within lists and page layouts.",
    "displayName": "Divider",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "text": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Render a Divider with text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/header/component.js": {
    "description": "View Header with safeArea.",
    "displayName": "Header",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "primaryText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Header primary text"
      },
      "primaryTextStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the primaryText element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "primaryTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the primary Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "secondaryText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Header secondary text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "secondaryTextStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the primaryText element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "secondaryTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the secondary Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "leftButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Button for the left hand side of the Header",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "leftButtonStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the leftButton element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "rightButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Button for the right hand side of the Header",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "rightButtonStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the rightButton element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "safeArea": {
        "type": {
          "name": "shape",
          "value": {
            "top": {
              "name": "number",
              "required": true
            },
            "right": {
              "name": "number",
              "required": true
            },
            "bottom": {
              "name": "number",
              "required": true
            },
            "left": {
              "name": "number",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/list-item/component.js": {
    "description": "ListItems are used to present multiple items vertically as a single element.",
    "displayName": "ListItem",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "primaryText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "ListItem primary text"
      },
      "primaryTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the primary Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "secondaryText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "ListItem secondary text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "secondaryTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the secondary Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "icon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Icon for the left hand side of the ListItem",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the icon container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "rightButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Button for the right hand side of the ListItem",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "rightButtonStyle": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of right button container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "time": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Timestamp for the primary Text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "timeStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the time element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "timeProps": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Custom props for the time Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "divider": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Render a Divider underneath the ListItem",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "dividerStyle": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the Divider component",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "onPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when Avatar is pressed\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "onLongPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when Avatar is long pressed\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/message-highlight/component.js": {
    "description": "Highlight a selected message",
    "displayName": "MessageHighlight",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content header text"
      },
      "headerStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the header Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "bodyText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content body text"
      },
      "bodyStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the body element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "bodyTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the body Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "closeIcon": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Icon to close the highlight with"
      },
      "closeIconStyle": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the icon container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "safeArea": {
        "type": {
          "name": "shape",
          "value": {
            "top": {
              "name": "number",
              "required": true
            },
            "right": {
              "name": "number",
              "required": true
            },
            "bottom": {
              "name": "number",
              "required": true
            },
            "left": {
              "name": "number",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/message-input/component.js": {
    "description": "Component for inputting messages using a keyboard.",
    "displayName": "MessageInput",
    "methods": [
      {
        "name": "getDerivedStateFromProps",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "props",
            "type": null
          },
          {
            "name": "state",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "keyboardWillShow",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "keyboardWillHide",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The string that will be rendered before text input has been entered."
      },
      "onChangeText": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when TextInput's text is changed\n\nfunction(text: string) => void"
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "TextInput value"
      },
      "inputStyle": {
        "type": {
          "name": "custom",
          "raw": "TextInput.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the input element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inputProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the TextInput component\n\nSee https://facebook.github.io/react-native/docs/textinput.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "leftIcon": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Icon for the left hand side of the TextInput"
      },
      "leftIconStyle": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the icon container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "rightIcon": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Icon for the right hand side of the TextInput"
      },
      "rightIconStyle": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the icon container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "safeArea": {
        "type": {
          "name": "shape",
          "value": {
            "top": {
              "name": "number",
              "required": true
            },
            "right": {
              "name": "number",
              "required": true
            },
            "bottom": {
              "name": "number",
              "required": true
            },
            "left": {
              "name": "number",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/text/component.js": {
    "description": "Text element with different types of styles.",
    "displayName": "Text",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Text content"
      },
      "type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'body'",
              "computed": false
            },
            {
              "value": "'body-light'",
              "computed": false
            },
            {
              "value": "'body-lighter'",
              "computed": false
            },
            {
              "value": "'body-accent'",
              "computed": false
            },
            {
              "value": "'body-contrast'",
              "computed": false
            },
            {
              "value": "'button'",
              "computed": false
            },
            {
              "value": "'divider'",
              "computed": false
            },
            {
              "value": "'heading'",
              "computed": false
            },
            {
              "value": "'heading-contrast'",
              "computed": false
            },
            {
              "value": "'heading-light'",
              "computed": false
            },
            {
              "value": "'heading-secondary'",
              "computed": false
            },
            {
              "value": "'navigation'",
              "computed": false
            },
            {
              "value": "'navigation-emphasized'",
              "computed": false
            },
            {
              "value": "'tab'",
              "computed": false
            },
            {
              "value": "'tab-active'",
              "computed": false
            },
            {
              "value": "'time'",
              "computed": false
            },
            {
              "value": "'time-contrast'",
              "computed": false
            },
            {
              "value": "'avatar'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Type of style to render",
        "defaultValue": {
          "value": "'body'",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/text-input/component.js": {
    "description": "Component for inputting text using a keyboard.",
    "displayName": "TextInput",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The string that will be rendered before text input has been entered."
      },
      "onChangeText": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when TextInput's text is changed\n\nfunction(text: string) => void"
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "TextInput value"
      },
      "inputStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeTextInput.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the input element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inputProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the TextInput component\n\nSee https://facebook.github.io/react-native/docs/textinput.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "TextInput label text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "labelStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the label Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "divider": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Render a Divider underneath the TextInput",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "dividerStyle": {
        "type": {
          "name": "custom",
          "raw": "View.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the Divider component",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/theme-provider/index.js": {
    "description": "Provide theme to all children using context",
    "displayName": "ThemeProvider",
    "methods": [],
    "props": {
      "colors": {
        "type": {
          "name": "shape",
          "value": {
            "primary": {
              "name": "string",
              "required": false
            },
            "secondary": {
              "name": "string",
              "required": false
            },
            "black": {
              "name": "string",
              "required": false
            },
            "white": {
              "name": "string",
              "required": false
            },
            "darkGray": {
              "name": "string",
              "required": false
            },
            "gray": {
              "name": "string",
              "required": false
            },
            "lightGray": {
              "name": "string",
              "required": false
            },
            "lighterGray": {
              "name": "string",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Your theme's colors",
        "defaultValue": {
          "value": "colors",
          "computed": true
        }
      },
      "fonts": {
        "type": {
          "name": "shape",
          "value": {
            "regular": {
              "name": "shape",
              "value": {
                "fontFamily": {
                  "name": "string",
                  "required": false
                }
              },
              "required": false
            },
            "semiBold": {
              "name": "shape",
              "value": {
                "fontFamily": {
                  "name": "string",
                  "required": false
                }
              },
              "required": false
            },
            "bold": {
              "name": "shape",
              "value": {
                "fontFamily": {
                  "name": "string",
                  "required": false
                }
              },
              "required": false
            },
            "italic": {
              "name": "shape",
              "value": {
                "fontFamily": {
                  "name": "string",
                  "required": false
                }
              },
              "required": false
            }
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "fonts",
          "computed": true
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Children to apply theme color to"
      }
    }
  }
}