{
  "lib/alphabet-picker/component.js": {
    "description": "Alphabet picker",
    "displayName": "AlphabetPicker",
    "methods": [
      {
        "name": "getDerivedStateFromProps",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "props",
            "type": null
          },
          {
            "name": "state",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "onPanResponderGrant",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          },
          {
            "name": "gestureState",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "onPanResponderMove",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          },
          {
            "name": "gestureState",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "onPanResponderEnd",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "onLayout",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "findTouchedLetter",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "y",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "alphabet": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "Override the alphabet\n\nDefaults to: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "onTouchStart": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when touch event is fired\n\nfunction() => void",
        "defaultValue": {
          "value": "() => {}",
          "computed": false
        }
      },
      "onTouchEnd": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when touch event has ended\n\nfunction() => void",
        "defaultValue": {
          "value": "() => {}",
          "computed": false
        }
      },
      "onTouchLetter": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when a letter is touched\n\nfunction(letter: string) => void",
        "defaultValue": {
          "value": "() => {}",
          "computed": false
        }
      },
      "safeArea": {
        "type": {
          "name": "shape",
          "value": {
            "top": {
              "name": "number",
              "required": true
            },
            "right": {
              "name": "number",
              "required": true
            },
            "bottom": {
              "name": "number",
              "required": true
            },
            "left": {
              "name": "number",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/avatar/component.js": {
    "description": "Represent people or objects.",
    "displayName": "Avatar",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "source": {
        "type": {
          "name": "custom",
          "raw": "Image.propTypes.source"
        },
        "required": false,
        "description": "Image source",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "text": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Avatar text, styling is optimized for two characters. If you want to render more than two characters, you should decrease fontSize using textStyle.",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "icon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Avatar icon",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Avatar size",
        "defaultValue": {
          "value": "48",
          "computed": false
        }
      },
      "type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'circle'",
              "computed": false
            },
            {
              "value": "'square'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Avatar type; 'circle' or 'square'",
        "defaultValue": {
          "value": "'circle'",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Background color for text Avatars",
        "defaultValue": {
          "value": "'#B2B2B2'",
          "computed": false
        }
      },
      "onPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when Avatar is pressed\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "onLongPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when Avatar is long pressed\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "gradientColors": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "Renders a radial gradient if supplied. Must be an array of colors.",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "gradientOffsets": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "number"
          }
        },
        "required": false,
        "description": "Custom offsets for the gradient colors. Array length must equal gradientColors length",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "gradientProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the RadialGradient component\n\nhttps://github.com/react-native-community/react-native-svg#radialgradient",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "lib/button/component.js": {
    "description": "Button with optional icon",
    "displayName": "Button",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "containerStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the container element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Label text"
      },
      "labelTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the label Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelTextStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the labelText container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "icon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Icon for the left hand side of the Button",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the icon container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "onPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when Button is pressed\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "onLongPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when Button is long pressed\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/contact-list/component.js": {
    "description": "Sorted and separated ContactList",
    "displayName": "ContactList",
    "methods": [
      {
        "name": "onTouchLetter",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "letter",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "getItemLayout",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "keyExtractor",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "item",
            "type": null
          },
          {
            "name": "index",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "renderItem",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "{ item }",
            "type": null
          },
          {
            "name": "styles",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "renderSectionHeader",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "{ section }",
            "type": null
          },
          {
            "name": "styles",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "listStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the list element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "sectionListProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the SectionList component\n\nSee https://facebook.github.io/react-native/docs/sectionlist.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "alphabetPickerProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the AlphabetPicker component\n\nSee AlphabetPicker page for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "contacts": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "title": {
                "name": "node",
                "required": true
              },
              "data": {
                "name": "arrayOf",
                "value": {
                  "name": "object"
                },
                "required": true
              }
            }
          }
        },
        "required": true,
        "description": "Sorted contact data"
      },
      "alphabetPicker": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Render the alphabet picker",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "itemHeight": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Contact item height",
        "defaultValue": {
          "value": "56",
          "computed": false
        }
      },
      "onItemPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when item is pressed\n\nIf custom renderItem method is supplied, implement your own onPress event.\n\nfunction(item: object) => void",
        "defaultValue": {
          "value": "() => {}",
          "computed": false
        }
      },
      "renderItem": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Override renderItem\nIf used make sure to adjust the itemHeight prop as well\n\nfunction(item: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "sectionHeaderHeight": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Contact divider height",
        "defaultValue": {
          "value": "24",
          "computed": false
        }
      },
      "renderSectionHeader": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Override renderSectionHeader\nIf used make sure to adjust the sectionHeaderHeight prop as well\n\nfunction(section: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "keyExtractor": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Override keyExtractor\n\nfunction(item: object, index: number) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "safeArea": {
        "type": {
          "name": "shape",
          "value": {
            "top": {
              "name": "number",
              "required": true
            },
            "right": {
              "name": "number",
              "required": true
            },
            "bottom": {
              "name": "number",
              "required": true
            },
            "left": {
              "name": "number",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/content-item/component.js": {
    "description": "Display content with a header",
    "displayName": "ContentItem",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content header text"
      },
      "headerStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the header Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "bodyText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content body text"
      },
      "bodyStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the body element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "bodyTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the body Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "dividerProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the Divider component\n\nSee Divider for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "divider": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Render a Divider underneath the bodyText",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "lib/context-menu/component.js": {
    "description": "Display a menu of buttons based on an array of items",
    "displayName": "ContextMenu",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textContainerStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the textContainer element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "itemStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the textContainer element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "itemTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the item Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "items": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "key": {
                "name": "string",
                "required": true
              },
              "text": {
                "name": "node",
                "required": true
              },
              "onPress": {
                "name": "func",
                "required": true
              }
            }
          }
        },
        "required": true,
        "description": "ContextMenu items. Must be an array of objects containing the following:\n\n{\n  key: String,\n  text: Node,\n  onPress: Function\n}"
      },
      "notchStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the notch element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/counter/component.js": {
    "description": "Display a (notification) counter",
    "displayName": "Counter",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "backgroundStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the background element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "value": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": "Counter value"
      },
      "maxValue": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Counter max value, will render `<maxValue>+` if value exceeds maxValue",
        "defaultValue": {
          "value": "9",
          "computed": false
        }
      },
      "textProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the value Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/dimensions/provider.js": {
    "description": "Provide dimensions to all children using context",
    "displayName": "DimensionsProvider",
    "methods": [
      {
        "name": "getDerivedStateFromProps",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "props",
            "type": null
          },
          {
            "name": "state",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "handleDimensionsChange",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "dimensions",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "node"
            },
            {
              "name": "arrayOf",
              "value": {
                "name": "node"
              }
            }
          ]
        },
        "required": true,
        "description": "Children to apply dimensions to"
      }
    }
  },
  "lib/divider/component.js": {
    "description": "Dividers group and separate content within lists and page layouts.",
    "displayName": "Divider",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "lineStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the line element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "offset": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Offset for the divider on either the right or the left",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "offsetSide": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'left'",
              "computed": false
            },
            {
              "value": "'right'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "The side which the offset gets computed from",
        "defaultValue": {
          "value": "'left'",
          "computed": false
        }
      },
      "offsetColor": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The color for the offset",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "text": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Render a Divider with text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the text element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/header/component.js": {
    "description": "View Header with safeArea.",
    "displayName": "Header",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "containerStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the container element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "primaryText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Header primary text"
      },
      "primaryTextStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the primaryText element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "primaryTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the primary Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "secondaryText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Header secondary text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "secondaryTextStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the primaryText element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "secondaryTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the secondary Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "leftButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Button for the left hand side of the Header",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "leftButtonStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the leftButton element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "rightButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Button for the right hand side of the Header",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "rightButtonStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the rightButton element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inModal": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Remove safeArea padding for Android if Header is rendered inside a Modal",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "safeArea": {
        "type": {
          "name": "shape",
          "value": {
            "top": {
              "name": "number",
              "required": true
            },
            "right": {
              "name": "number",
              "required": true
            },
            "bottom": {
              "name": "number",
              "required": true
            },
            "left": {
              "name": "number",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/icons/attachment.js": {
    "description": "",
    "displayName": "IconAttachment",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/brush.js": {
    "description": "",
    "displayName": "IconBrush",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/camera.js": {
    "description": "",
    "displayName": "IconCamera",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/chats.js": {
    "description": "",
    "displayName": "IconChats",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/checkmark.js": {
    "description": "",
    "displayName": "IconCheckmark",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "uncheckedColor": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Unchecked icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "checkColor": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Check color",
        "defaultValue": {
          "value": "'transparent'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      },
      "checked": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Checkmark checked",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "lib/icons/chevron-left.js": {
    "description": "",
    "displayName": "IconChevronLeft",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/chevron-right.js": {
    "description": "",
    "displayName": "IconChevronRight",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/close.js": {
    "description": "",
    "displayName": "IconClose",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/compass.js": {
    "description": "",
    "displayName": "IconCompass",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/compose.js": {
    "description": "",
    "displayName": "IconCompose",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/contacts.js": {
    "description": "",
    "displayName": "IconContacts",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/delete.js": {
    "description": "",
    "displayName": "IconDelete",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/download.js": {
    "description": "",
    "displayName": "IconDownload",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/globe.js": {
    "description": "",
    "displayName": "IconGlobe",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/hand.js": {
    "description": "",
    "displayName": "IconHand",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/invite.js": {
    "description": "",
    "displayName": "IconInvite",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/list.js": {
    "description": "",
    "displayName": "IconList",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/lock.js": {
    "description": "",
    "displayName": "IconLock",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/mask.js": {
    "description": "",
    "displayName": "IconMask",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/megaphone.js": {
    "description": "",
    "displayName": "IconMegaphone",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/microphone.js": {
    "description": "",
    "displayName": "IconMicrophone",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/newspaper.js": {
    "description": "",
    "displayName": "IconNewspaper",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/notifications.js": {
    "description": "",
    "displayName": "IconNotifications",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/pause.js": {
    "description": "",
    "displayName": "IconPause",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/people.js": {
    "description": "",
    "displayName": "IconPeople",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/play.js": {
    "description": "",
    "displayName": "IconPlay",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/refresh.js": {
    "description": "",
    "displayName": "IconRefresh",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/search.js": {
    "description": "",
    "displayName": "IconSearch",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/send.js": {
    "description": "",
    "displayName": "IconSend",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/settings.js": {
    "description": "",
    "displayName": "IconSettings",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/share.js": {
    "description": "",
    "displayName": "IconShare",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/storage.js": {
    "description": "",
    "displayName": "IconStorage",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/icons/verified.js": {
    "description": "",
    "displayName": "IconVerified",
    "methods": [],
    "props": {
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color",
        "defaultValue": {
          "value": "'#8E8E93'",
          "computed": false
        }
      },
      "checkColor": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Check color",
        "defaultValue": {
          "value": "'transparent'",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      }
    }
  },
  "lib/lightbox/component.js": {
    "description": "Lightboxes display highlighted images",
    "displayName": "Lightbox",
    "methods": [
      {
        "name": "getDerivedStateFromProps",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "props",
            "type": null
          },
          {
            "name": "state",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "onThumbnailLoad",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "onImageLoad",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "hideInterface",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "showInterface",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the Header component\n\nSee Header page for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "source": {
        "type": {
          "name": "custom",
          "raw": "Image.propTypes.source.isRequired"
        },
        "required": false,
        "description": "The image source (either a remote URL or a local file resource)"
      },
      "thumbnailSource": {
        "type": {
          "name": "custom",
          "raw": "Image.propTypes.source"
        },
        "required": false,
        "description": "Optional thumbnail source",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "imageProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the Image component\n\nSee https://facebook.github.io/react-native/docs/image.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "imageContainerStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the image contianer element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "fadeDuration": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Duration of the cross fade animations",
        "defaultValue": {
          "value": "300",
          "computed": false
        }
      },
      "footer": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Lightbox footer, useful for rendering buttons or text in.",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "footerStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the footer element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "visible": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Determine whether Lighbox is visible.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "onRequestClose": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "The onRequestClose callback is called when the user taps the back button on Android"
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "safeArea": {
        "type": {
          "name": "shape",
          "value": {
            "top": {
              "name": "number",
              "required": true
            },
            "right": {
              "name": "number",
              "required": true
            },
            "bottom": {
              "name": "number",
              "required": true
            },
            "left": {
              "name": "number",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/list-item/component.js": {
    "description": "ListItems are used to present multiple items vertically as a single element.",
    "displayName": "ListItem",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "primaryText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "ListItem primary text"
      },
      "primaryTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the primary Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "secondaryText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "ListItem secondary text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "secondaryTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the secondary Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "icon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Icon for the left hand side of the ListItem",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "iconStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the icon container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "rightButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Button for the right hand side of the ListItem",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "rightButtonStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of right button container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "leftButton": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Button for the left hand side of the ListItem",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "leftButtonStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of left button container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "time": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Render a timestamp next to primaryText",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "timeStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the time element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "timeProps": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Custom props for the time Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "dividerBottom": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Render a Divider underneath the ListItem",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "dividerBottomProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the bottom Divider component\n\nSee Divider for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "dividerTop": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Render a Divider above the ListItem",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "dividerTopProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the top Divider component\n\nSee Divider for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "counter": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Render a counter next to secondaryText",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "counterStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the Counter component",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "onPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when ListItem is pressed\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "onLongPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when ListItem is long pressed\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/message/audio-message/component.js": {
    "description": "",
    "displayName": "AudioMessage",
    "methods": [
      {
        "name": "renderButton",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "headerText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerTextProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "timeTextProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "timeText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": ""
      },
      "align": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'right'",
              "computed": false
            },
            {
              "value": "'left'",
              "computed": false
            }
          ]
        },
        "required": true,
        "description": ""
      },
      "statusIcon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "audio": {
        "type": {
          "name": "shape",
          "value": {
            "onPlay": {
              "name": "func",
              "required": true
            },
            "onPause": {
              "name": "func",
              "required": true
            },
            "isPlaying": {
              "name": "bool",
              "required": true
            },
            "isLoading": {
              "name": "bool",
              "required": true
            },
            "progress": {
              "name": "number",
              "required": true
            },
            "time": {
              "name": "node",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "progressProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/message/component.js": {
    "description": "Message with three types",
    "displayName": "Message",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'text'",
              "computed": false
            },
            {
              "value": "'image'",
              "computed": false
            },
            {
              "value": "'contact'",
              "computed": false
            },
            {
              "value": "'video'",
              "computed": false
            },
            {
              "value": "'audio'",
              "computed": false
            }
          ]
        },
        "required": true,
        "description": "The type of message; 'text', 'image', 'contact', 'video' or 'audio'"
      },
      "bodyText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Message body text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "bodyTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the body Text component for 'text' and 'image' messages\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Message header text, will only render in 'left' aligned messages",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "headerTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the header Text component for 'text', 'contact' and 'image' messages\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "timeText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Time the message was sent"
      },
      "timeTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the time Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "avatar": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Message avatar, will only render in 'left' aligned messages",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "avatarStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the avatar element"
      },
      "avatarContainerStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the avatar container element"
      },
      "align": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'right'",
              "computed": false
            },
            {
              "value": "'left'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Side which the message is on",
        "defaultValue": {
          "value": "'left'",
          "computed": false
        }
      },
      "statusIcon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Icon to show whether a message is sent or read.\nThis icon renders on the right hand side of the time",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "image": {
        "type": {
          "name": "shape",
          "value": {
            "source": {
              "name": "custom",
              "raw": "Image.propTypes.source.isRequired",
              "required": true
            },
            "thumbnailSource": {
              "name": "custom",
              "raw": "Image.propTypes.source",
              "required": false
            },
            "ratio": {
              "name": "number",
              "required": true
            }
          }
        },
        "required": false,
        "description": "Message image; source, thumbnailSource and ratio"
      },
      "imageSize": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Width for landscape images and height for portrait images",
        "defaultValue": {
          "value": "210",
          "computed": false
        }
      },
      "imageProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the Image component for 'image' messages\n\nSee https://facebook.github.io/react-native/docs/image.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "onImagePress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when Message image is pressed\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "onImageLongPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback fired when Message image is long pressed\n\nfunction(event: object) => void",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "imageStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the avatar element"
      },
      "imageComponent": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Custom Image component"
      },
      "contact": {
        "type": {
          "name": "shape",
          "value": {
            "avatar": {
              "name": "node",
              "required": true
            },
            "primaryText": {
              "name": "node",
              "required": true
            },
            "secondaryText": {
              "name": "node",
              "required": true
            }
          }
        },
        "required": false,
        "description": "Message contact; avatar, primaryText and secondaryText"
      },
      "primaryTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the primary Text component for 'contact' messages\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "secondaryTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the secondary Text component for 'contact' messages\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "enableHyperlinks": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Make urls, fuzzy links, emails etc. clickable using https://github.com/obipawan/react-native-hyperlink",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "hyperlinkProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Props for the Hyperlink component, see https://github.com/obipawan/react-native-hyperlink#props for available props",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "video": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Message video; source, thumbnailSource and ratio"
      },
      "videoSize": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Width for landscape videos and height for portrait videos",
        "defaultValue": {
          "value": "210",
          "computed": false
        }
      },
      "audio": {
        "type": {
          "name": "shape",
          "value": {
            "onPlay": {
              "name": "func",
              "required": false
            },
            "onPause": {
              "name": "func",
              "required": false
            },
            "isPlaying": {
              "name": "bool",
              "required": false
            },
            "isLoading": {
              "name": "bool",
              "required": false
            },
            "progress": {
              "name": "number",
              "required": false
            },
            "time": {
              "name": "node",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Audio object\n\n{\n  onPlay: function(event: object) => void,\n  onPause: function(event: object) => void,\n  isPlaying: Boolean,\n  isLoading: Boolean,\n  progress: Number,\n  time: Node\n}",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "progress": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Display a progress indicator",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "progressProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the progress indicator\n\nSee https://github.com/oblador/react-native-progress for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "lib/message/contact-message/component.js": {
    "description": "",
    "displayName": "ContactMessage",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "timeTextProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "timeText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": ""
      },
      "align": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'right'",
              "computed": false
            },
            {
              "value": "'left'",
              "computed": false
            }
          ]
        },
        "required": true,
        "description": ""
      },
      "statusIcon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "contact": {
        "type": {
          "name": "shape",
          "value": {
            "avatar": {
              "name": "node",
              "required": true
            },
            "primaryText": {
              "name": "node",
              "required": true
            },
            "secondaryText": {
              "name": "node",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "primaryTextProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "secondaryTextProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "headerText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "headerTextProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/message/image-message/component.js": {
    "description": "",
    "displayName": "ImageMessage",
    "methods": [
      {
        "name": "renderProgress",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "bodyText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "bodyTextProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "timeTextProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "imageProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "timeText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": ""
      },
      "align": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'right'",
              "computed": false
            },
            {
              "value": "'left'",
              "computed": false
            }
          ]
        },
        "required": true,
        "description": ""
      },
      "statusIcon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "image": {
        "type": {
          "name": "shape",
          "value": {
            "source": {
              "name": "custom",
              "raw": "NativeImage.propTypes.source.isRequired",
              "required": true
            },
            "thumbnailSource": {
              "name": "custom",
              "raw": "NativeImage.propTypes.source",
              "required": false
            },
            "ratio": {
              "name": "number",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "onImagePress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "onImageLongPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "imageSize": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": ""
      },
      "imageComponent": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "imageStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "hyperlinkProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "enableHyperlinks": {
        "type": {
          "name": "bool"
        },
        "required": true,
        "description": ""
      },
      "progress": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "progressProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/message/image-message/image/component.js": {
    "description": "",
    "displayName": "Image",
    "methods": [
      {
        "name": "getDerivedStateFromProps",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "props",
            "type": null
          },
          {
            "name": "state",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "onThumbnailLoad",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "onImageLoad",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "source": {
        "type": {
          "name": "custom",
          "raw": "NativeImage.propTypes.source.isRequired"
        },
        "required": false,
        "description": ""
      },
      "thumbnailSource": {
        "type": {
          "name": "custom",
          "raw": "NativeImage.propTypes.source"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "ratio": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": ""
      },
      "fadeDuration": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "300",
          "computed": false
        }
      },
      "onPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "onLongPress": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "210",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/message/message-time/component.js": {
    "description": "",
    "displayName": "MessageTime",
    "methods": [],
    "props": {
      "timeText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": ""
      },
      "timeTextProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "align": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'right'",
              "computed": false
            },
            {
              "value": "'left'",
              "computed": false
            }
          ]
        },
        "required": true,
        "description": ""
      },
      "statusIcon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "lib/message/text-message/component.js": {
    "description": "",
    "displayName": "TextMessage",
    "methods": [],
    "props": {
      "bodyText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": ""
      },
      "headerText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "bodyTextProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "headerTextProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "timeTextProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "timeText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": ""
      },
      "align": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'right'",
              "computed": false
            },
            {
              "value": "'left'",
              "computed": false
            }
          ]
        },
        "required": true,
        "description": ""
      },
      "statusIcon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "hyperlinkProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "enableHyperlinks": {
        "type": {
          "name": "bool"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/message/video-message/component.js": {
    "description": "",
    "displayName": "VideoMessage",
    "methods": [],
    "props": {
      "bodyText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "bodyTextProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "timeTextProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "timeText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": ""
      },
      "align": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'right'",
              "computed": false
            },
            {
              "value": "'left'",
              "computed": false
            }
          ]
        },
        "required": true,
        "description": ""
      },
      "statusIcon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "video": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": ""
      },
      "videoSize": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": ""
      },
      "hyperlinkProps": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": ""
      },
      "enableHyperlinks": {
        "type": {
          "name": "bool"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/message-highlight/component.js": {
    "description": "Highlight a selected message",
    "displayName": "MessageHighlight",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content header text"
      },
      "headerStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the header element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the header Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "bodyText": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Content body text"
      },
      "bodyStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the body element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "bodyTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the body Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "closeIcon": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Icon to close the highlight with"
      },
      "closeIconStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the icon container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "safeArea": {
        "type": {
          "name": "shape",
          "value": {
            "top": {
              "name": "number",
              "required": true
            },
            "right": {
              "name": "number",
              "required": true
            },
            "bottom": {
              "name": "number",
              "required": true
            },
            "left": {
              "name": "number",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/message-input/component.js": {
    "description": "Component for inputting messages using a keyboard.",
    "displayName": "MessageInput",
    "methods": [
      {
        "name": "getDerivedStateFromProps",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "props",
            "type": null
          },
          {
            "name": "state",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "keyboardWillShow",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "keyboardWillHide",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The string that will be rendered before text input has been entered."
      },
      "onChangeText": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when TextInput's text is changed\n\nfunction(text: string) => void"
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "TextInput value"
      },
      "inputStyle": {
        "type": {
          "name": "custom",
          "raw": "TextInput.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the input element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inputProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the TextInput component\n\nSee https://facebook.github.io/react-native/docs/textinput.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "leftIcon": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Icon for the left hand side of the TextInput",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "leftIconStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the icon container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "rightIcon": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Icon for the right hand side of the TextInput"
      },
      "rightIconStyle": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the icon container",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "divider": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Render a Divider above the MessageInput",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "dividerProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the top Divider component\n\nSee Divider for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "safeArea": {
        "type": {
          "name": "shape",
          "value": {
            "top": {
              "name": "number",
              "required": true
            },
            "right": {
              "name": "number",
              "required": true
            },
            "bottom": {
              "name": "number",
              "required": true
            },
            "left": {
              "name": "number",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/message-separator/component.js": {
    "description": "Separate messages",
    "displayName": "MessageSeparator",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "text": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Separator text"
      },
      "textProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the value Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/picker/component.js": {
    "description": "Pick a value from a list of items",
    "displayName": "Picker",
    "methods": [
      {
        "name": "showPicker",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "hidePicker",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "selectedValue": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Value matching the value of one of the items"
      },
      "items": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "label": {
                "name": "string",
                "required": true
              },
              "value": {
                "name": "string",
                "required": true
              }
            }
          }
        },
        "required": true,
        "description": "Picker items. Must be an array of objects containing the following:\n\n{\n  label: String,\n  value: String\n}"
      },
      "onValueChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when an item is selected\n\nfunction(itemValue: string, itemPosition: number) => void"
      },
      "pickerStyle": {
        "type": {
          "name": "custom",
          "raw": "NativePicker.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the picker element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "pickerItemStyle": {
        "type": {
          "name": "custom",
          "raw": "NativePicker.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the picker item element, iOS only",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "pickerProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the Picker component\n\nSee https://facebook.github.io/react-native/docs/picker.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "divider": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Render a Divider underneath the Picker",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "dividerProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the Divider component\n\nSee Divider for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the text element, iOS only",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "textProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the Text component, iOS only\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "modalProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the Modal component, iOS only\n\nSee https://facebook.github.io/react-native/docs/modal.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "headerStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the header element, iOS only",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "buttonText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Header button text, iOS only",
        "defaultValue": {
          "value": "'Done'",
          "computed": false
        }
      },
      "buttonStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the button element, iOS only",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "buttonProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the button Text component, iOS only\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "safeArea": {
        "type": {
          "name": "shape",
          "value": {
            "top": {
              "name": "number",
              "required": true
            },
            "right": {
              "name": "number",
              "required": true
            },
            "bottom": {
              "name": "number",
              "required": true
            },
            "left": {
              "name": "number",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/resizeable-svg/index.js": {
    "description": "",
    "displayName": "ResizeableSvg",
    "methods": [],
    "props": {
      "size": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Icon size",
        "defaultValue": {
          "value": "28",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/text/component.js": {
    "description": "Text element with different types of styles.",
    "displayName": "Text",
    "methods": [],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Text content"
      },
      "type": {
        "type": {
          "name": "enum",
          "computed": true,
          "value": "types"
        },
        "required": false,
        "description": "Type of style to render",
        "defaultValue": {
          "value": "'body'",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/text-input/component.js": {
    "description": "Component for inputting text using a keyboard.",
    "displayName": "TextInput",
    "methods": [
      {
        "name": "focusInput",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "style": {
        "type": {
          "name": "custom",
          "raw": "ViewPropTypes.style"
        },
        "required": false,
        "description": "Override the styles of the root element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The string that will be rendered before text input has been entered."
      },
      "onChangeText": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "Callback fired when TextInput's text is changed\n\nfunction(text: string) => void"
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "TextInput value"
      },
      "inputStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeTextInput.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the input element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "inputProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the TextInput component\n\nSee https://facebook.github.io/react-native/docs/textinput.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelText": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "TextInput label text",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "labelStyle": {
        "type": {
          "name": "custom",
          "raw": "NativeText.propTypes.style"
        },
        "required": false,
        "description": "Override the styles of the label element",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "labelTextProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the label Text component\n\nSee https://facebook.github.io/react-native/docs/text.html#props for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "divider": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Render a Divider underneath the TextInput",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "dividerProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Custom props for the Divider component\n\nSee Divider for available props.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "shape",
          "value": {
            "colors": {
              "name": "object",
              "required": true
            },
            "fonts": {
              "name": "object",
              "required": true
            }
          }
        },
        "required": true,
        "description": ""
      }
    }
  },
  "lib/theme-provider/index.js": {
    "description": "Provide theme to all children using context",
    "displayName": "ThemeProvider",
    "methods": [],
    "props": {
      "colors": {
        "type": {
          "name": "shape",
          "value": {
            "primary": {
              "name": "string",
              "required": false
            },
            "secondary": {
              "name": "string",
              "required": false
            },
            "black": {
              "name": "string",
              "required": false
            },
            "white": {
              "name": "string",
              "required": false
            },
            "darkGray": {
              "name": "string",
              "required": false
            },
            "gray": {
              "name": "string",
              "required": false
            },
            "lightGray": {
              "name": "string",
              "required": false
            },
            "lighterGray": {
              "name": "string",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Your theme's colors",
        "defaultValue": {
          "value": "defaultColors",
          "computed": true
        }
      },
      "fonts": {
        "type": {
          "name": "shape",
          "value": {
            "regular": {
              "name": "shape",
              "value": {
                "fontFamily": {
                  "name": "string",
                  "required": false
                }
              },
              "required": false
            },
            "semiBold": {
              "name": "shape",
              "value": {
                "fontFamily": {
                  "name": "string",
                  "required": false
                }
              },
              "required": false
            },
            "bold": {
              "name": "shape",
              "value": {
                "fontFamily": {
                  "name": "string",
                  "required": false
                }
              },
              "required": false
            },
            "italic": {
              "name": "shape",
              "value": {
                "fontFamily": {
                  "name": "string",
                  "required": false
                }
              },
              "required": false
            }
          }
        },
        "required": false,
        "description": "Your theme's fonts",
        "defaultValue": {
          "value": "defaultFonts",
          "computed": true
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Children to apply theme to"
      }
    }
  },
  "lib/touchable/index.js": {
    "description": "A platform specific wrapper for making views respond properly to touches.\nUses TouchableNativeFeedback for Android and TouchableHighlight for iOS.",
    "displayName": "Touchable",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Touchable content"
      },
      "rippleColor": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Android ripple color. See https://facebook.github.io/react-native/docs/touchablenativefeedback#ripple",
        "defaultValue": {
          "value": "'#E6E6E6'",
          "computed": false
        }
      },
      "borderlessRipple": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Android borderless ripple. See https://facebook.github.io/react-native/docs/touchablenativefeedback#ripple",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "underlayColor": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The color of the underlay that will show through when the touch is active.",
        "defaultValue": {
          "value": "'#F8F8F8'",
          "computed": false
        }
      },
      "opacity": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Use TouchableOpacity",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "lib/ui-provider/index.js": {
    "description": "Provide theme and dimensions to all children using context",
    "displayName": "UIProvider",
    "methods": [],
    "props": {
      "colors": {
        "type": {
          "name": "shape",
          "value": {
            "primary": {
              "name": "string",
              "required": false
            },
            "secondary": {
              "name": "string",
              "required": false
            },
            "black": {
              "name": "string",
              "required": false
            },
            "white": {
              "name": "string",
              "required": false
            },
            "darkGray": {
              "name": "string",
              "required": false
            },
            "gray": {
              "name": "string",
              "required": false
            },
            "lightGray": {
              "name": "string",
              "required": false
            },
            "lighterGray": {
              "name": "string",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Your theme's colors",
        "defaultValue": {
          "value": "undefined",
          "computed": true
        }
      },
      "fonts": {
        "type": {
          "name": "shape",
          "value": {
            "regular": {
              "name": "shape",
              "value": {
                "fontFamily": {
                  "name": "string",
                  "required": false
                }
              },
              "required": false
            },
            "semiBold": {
              "name": "shape",
              "value": {
                "fontFamily": {
                  "name": "string",
                  "required": false
                }
              },
              "required": false
            },
            "bold": {
              "name": "shape",
              "value": {
                "fontFamily": {
                  "name": "string",
                  "required": false
                }
              },
              "required": false
            },
            "italic": {
              "name": "shape",
              "value": {
                "fontFamily": {
                  "name": "string",
                  "required": false
                }
              },
              "required": false
            }
          }
        },
        "required": false,
        "description": "Your theme's fonts",
        "defaultValue": {
          "value": "undefined",
          "computed": true
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": true,
        "description": "Children to apply theme and dimensions to"
      }
    }
  }
}